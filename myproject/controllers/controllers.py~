import hashlib
import json
from pyramid.view import view_config
from pyramid.httpexceptions import HTTPFound
from auth import User
from ..models import (
    DBSession, User
    )

from ..forms import ContactForm, RegisterForm


@view_config(route_name='home', renderer='home.mako')
def my_view(request):
    one = None
    return {'one': one, 'project': 'myproject'}


        

@view_config(route_name='contact', renderer="contact.mako")
def contact_form(request):

    f = ContactForm(request.POST)   # empty form initializes if not a POST request

    if 'POST' == request.method and 'form.submitted' in request.params:
        if f.validate():
            #TODO: Do email sending here.

            request.session.flash("Your message has been sent!")
            return HTTPFound(location=request.route_url('home'))

            
    return {'contact_form': f}

@view_config(route_name='data', renderer="data.mako")
def data(request):
	print "-------------------------------------------------"
	str = request.body
	incomingData = json.loads(request.POST['JSONdata'])
	print incomingData
	
	foreach i: str1
	return{  }
	
	
    
@view_config(route_name='user_register', renderer="register.mako")
def register_form(request):

    r = RegisterForm(request.POST)   # empty form initializes if not a POST request

    if 'POST' == request.method and 'form.submitted' in request.params:
        if r.validate():
            #TODO: Do email sending here.
	    U = User() 
	    U.user_id = request.POST['username']
	    U.password = hashlib.sha1(request.POST['password']).hexdigest()
	    U.first_name = request.POST['first_name']  
	    U.last_name = request.POST['last_name']  
	    U.email = request.POST['email'] 
	    DBSession.add(U)
            request.session.flash("Your message has been sent!")
            return HTTPFound(location=request.route_url('home'))

            
    return {'register_form': r}
    
